name: CI

on:
  push:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Check style
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        components: rustfmt

    - name: Cargo fmt
      run: cargo fmt --all -- --check

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v4

    - name: Check the spelling of the files in our repo
      uses: crate-ci/typos@master

  clippy:
    name: Run clippy
    needs: [style]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Install WeeChat
      run: |
        sudo mkdir /root/.gnupg
        sudo chmod 700 /root/.gnupg
        sudo mkdir -p /usr/share/keyrings
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/weechat-archive-keyring.gpg --keyserver hkps://keys.openpgp.org --recv-keys 11E9DE8848F2B65222AA75B8D1820DB22A11534E
        echo "deb [signed-by=/usr/share/keyrings/weechat-archive-keyring.gpg] https://weechat.org/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/weechat.list
        echo "deb-src [signed-by=/usr/share/keyrings/weechat-archive-keyring.gpg] https://weechat.org/ubuntu jammy main" | sudo tee -a /etc/apt/sources.list.d/weechat.list
        sudo apt-get update
        sudo apt-get install weechat-dev

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        components: clippy

    - uses: Swatinem/rust-cache@v2

    - name: Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: ${{ matrix.target.name }} ${{ matrix.channel }}
    needs: [clippy]

    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target: [
          { "os": "ubuntu-latest",  "toolchain": "x86_64-unknown-linux-gnu", "name": "Linux GNU (64-bit)" },
          { "os": "ubuntu-latest",  "toolchain": "i686-unknown-linux-gnu",   "name": "Linux GNU (32-bit)" },
          # TODO: Add some more OS variants here.
        ]
        channel: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install WeeChat
        if: runner.os == 'Linux'
        run: |
          sudo mkdir /root/.gnupg
          sudo chmod 700 /root/.gnupg
          sudo mkdir -p /usr/share/keyrings
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/weechat-archive-keyring.gpg --keyserver hkps://keys.openpgp.org --recv-keys 11E9DE8848F2B65222AA75B8D1820DB22A11534E
          echo "deb [signed-by=/usr/share/keyrings/weechat-archive-keyring.gpg] https://weechat.org/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/weechat.list
          echo "deb-src [signed-by=/usr/share/keyrings/weechat-archive-keyring.gpg] https://weechat.org/ubuntu jammy main" | sudo tee -a /etc/apt/sources.list.d/weechat.list
          sudo apt-get update
          sudo apt-get install weechat-dev

      - if: ${{ matrix.target.toolchain == 'i686-unknown-linux-gnu' }}
        run: sudo apt-get install libc6-dev-i386

      - run: rustup target add ${{ matrix.target.toolchain }}

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.channel }}
          targets: ${{ matrix.target.toolchain }}

      - uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test --all-features --target ${{ matrix.target.toolchain }}

  test-api:
    name: Test Weechat API
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
        version:
          - v3.8
          - v4.0.0
          - v4.1.0
          - v4.2.0
          - v4.3.0
          - v4.4.0
          - v4.5.0
          - v4.6.0
          - v4.7.0
    env:
      WEECHAT_BUNDLED: 'no'
      WEECHAT_PLUGIN_FILE: '${{ github.workspace }}/weechat-src/src/plugins/weechat-plugin.h'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout weechat API header
        uses: actions/checkout@v4
        with:
          repository: 'weechat/weechat'
          ref: ${{ matrix.version }}
          path: 'weechat-src'
          sparse-checkout: src/plugins/weechat-plugin.h
          sparse-checkout-cone-mode: false

      - run: sudo apt -y update
      - run: sudo apt -y install libclang-dev

      - if: ${{ matrix.toolchain == 'i686-unknown-linux-gnu' }}
        run: sudo apt-get install libc6-dev-i386

      - run: rustup target add ${{ matrix.toolchain }}

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          targets: ${{ matrix.toolchain }}
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test --all-features --target ${{ matrix.toolchain }}

      - name: Build
        run: cargo build --all-features --target ${{ matrix.toolchain }}

      - name: Lint
        run: cargo clippy --all-features --target ${{ matrix.toolchain }}
