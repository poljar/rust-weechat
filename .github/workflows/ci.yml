name: CI

on:
  push:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Check style
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        components: rustfmt

    - name: Cargo fmt
      run: cargo fmt --all -- --check

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v4

    - name: Check the spelling of the files in our repo
      uses: crate-ci/typos@master

  clippy:
    name: Run clippy
    needs: [style]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Install WeeChat
      run: |
        sudo mkdir /root/.gnupg
        sudo chmod 700 /root/.gnupg
        sudo mkdir -p /usr/share/keyrings
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/weechat-archive-keyring.gpg --keyserver hkps://keys.openpgp.org --recv-keys 11E9DE8848F2B65222AA75B8D1820DB22A11534E
        echo "deb [signed-by=/usr/share/keyrings/weechat-archive-keyring.gpg] https://weechat.org/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/weechat.list
        echo "deb-src [signed-by=/usr/share/keyrings/weechat-archive-keyring.gpg] https://weechat.org/ubuntu jammy main" | sudo tee -a /etc/apt/sources.list.d/weechat.list
        sudo apt-get update
        sudo apt-get install weechat-dev

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        components: clippy

    - uses: Swatinem/rust-cache@v2

    - name: Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: ${{ matrix.target.name }} ${{ matrix.channel }}
    needs: [clippy]

    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target: [
          { "os": "ubuntu-latest",  "toolchain": "x86_64-unknown-linux-gnu", "name": "Linux GNU" },
          # TODO: Add some more OS variants here.
        ]
        channel: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install WeeChat
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install weechat-dev

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ format('{0}-{1}', matrix.channel, matrix.target.toolchain) }}

      - uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test --all-features
